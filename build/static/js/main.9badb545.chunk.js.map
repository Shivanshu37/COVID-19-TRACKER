{"version":3,"sources":["stateData.js","util.js","Map.js","tableData.js","heading.jsx","App.js","index.js"],"names":["StateTable","_useState","useState","_useState2","Object","slicedToArray","stateData","setStateData","axios","method","url","then","response","Data","data","statewise","catch","error","console","log","react_default","a","createElement","className","style","color","background","fontSize","fontWeight","borderRadius","map","n","state","confirmed","active","recovered","deaths","casesTypeColors","cases","hex","rgb","half_op","multiplier","prettyPrintStat","stat","concat","numeral","format","showDataOnMap","casesType","arguments","length","undefined","country","Circle","center","countryInfo","lat","long","fillOpacity","fillColor","radius","Math","sqrt","Popup","backgroundImage","flag","Map","_ref","countries","zoom","MapContainer","TileLayer","attribution","Table","Confirmed","setConfirmed","_useState3","_useState4","Recovered","setRecovered","_useState5","_useState6","Deaths","setDeaths","_useState7","_useState8","NewCases","setNew","_useState9","_useState10","isLoading","setIsLoading","_useState11","lng","_useState12","mapCenter","_useState13","_useState14","mapZoom","_useState15","_useState16","mapCountries","setMapCountries","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","json","name","value","iso2","stop","apply","this","getCountriesData","headers","content-type","x-rapidapi-host","x-rapidapi-key","useQueryString","params","_response$data$respon","total","new","react_loader_spinner_default","type","height","width","Card","Typography","src_Map","CardContent","src_stateData","heading","textDecoration","App","src_heading","src_tableData","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9badb545.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nfunction StateTable() {\r\n  const [stateData, setStateData] = useState([]);\r\n  axios({\r\n    method: \"GET\",\r\n    url:\r\n      \"https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise\",\r\n  })\r\n    .then((response) => {\r\n      const Data = response.data.data.statewise;\r\n      setStateData(Data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  return (\r\n    <div>\r\n      <table className=\"stateTable\">\r\n        <tr>\r\n          <th\r\n            style={{\r\n              color: \"#6c757d\",\r\n              background: \"#f6f6f7\",\r\n              fontSize: \".75rem\",\r\n              fontWeight: \"bold\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            State:\r\n          </th>\r\n          <th\r\n            style={{\r\n              color: \"#6c757d\",\r\n              background: \"#f6f6f7\",\r\n              fontSize: \".75rem\",\r\n              fontWeight: \"bold\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            Confirmed:\r\n          </th>\r\n          <th\r\n            style={{\r\n              color: \"#6c757d\",\r\n              background: \"#f6f6f7\",\r\n              fontSize: \".75rem\",\r\n              fontWeight: \"bold\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            Active:\r\n          </th>\r\n          <th\r\n            style={{\r\n              color: \"#6c757d\",\r\n              background: \"#f6f6f7\",\r\n              fontSize: \".75rem\",\r\n              fontWeight: \"bold\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            Recovered:\r\n          </th>\r\n          <th\r\n            style={{\r\n              color: \"#6c757d\",\r\n              background: \"#f6f6f7\",\r\n              fontSize: \".75rem\",\r\n              fontWeight: \"bold\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            Deaths:\r\n          </th>\r\n        </tr>\r\n\r\n        {stateData.map((n) => (\r\n          <tr>\r\n            <td\r\n              style={{\r\n                color: \"#6c757d\",\r\n                background: \"#f6f6f7\",\r\n                fontSize: \".75rem\",\r\n                fontWeight: \"bold\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            >\r\n              {n.state}\r\n            </td>\r\n            <td style={{ color: \"#6c757d\" }}>{n.confirmed}</td>\r\n            <td style={{ color: \"#6c757d\" }}>{n.active}</td>\r\n            <td style={{ color: \"#6c757d\" }}>{n.recovered}</td>\r\n            <td style={{ color: \"#6c757d\" }}>{n.deaths}</td>\r\n          </tr>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default StateTable;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      fillOpacity={0.4}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div>\r\n          <div className=\"info-container\">\r\n            <div\r\n              className=\"info-flag\"\r\n              style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n            ></div>\r\n            <div className=\"info-name\">{country.country}</div>\r\n            <div className=\"info-confirmed\">\r\n              Cases: {numeral(country.cases).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-recovered\">\r\n              Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-deaths\">\r\n              Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport \"./Map.css\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport { showDataOnMap } from \"./util\";\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport StateTable from \"./stateData.js\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./tableData.css\";\r\nimport Map from \"./Map\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { prettyPrintStat } from \"./util\";\r\nfunction Table() {\r\n  const [Confirmed, setConfirmed] = useState([]);\r\n  const [Recovered, setRecovered] = useState([]);\r\n  const [Deaths, setDeaths] = useState([]);\r\n  const [NewCases, setNew] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [mapCenter, setMapCenter] = useState({ lat: 20.5937, lng: 78.9629 });\r\n  const [mapZoom, setMapZoom] = useState(2);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n\r\n          setMapCountries(data);\r\n          console.log(data);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n  axios({\r\n    method: \"GET\",\r\n    url: \"https://covid-193.p.rapidapi.com/statistics\",\r\n    headers: {\r\n      \"content-type\": \"application/octet-stream\",\r\n      \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"741a96821cmsh25cf77c6d7bf1afp12ad1ejsn1a19639b177e\",\r\n      useQueryString: true,\r\n    },\r\n    params: {\r\n      country: \"India\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      const { active, recovered, total } = response.data.response[0].cases;\r\n      setNew(response.data.response[0].cases.new);\r\n      setConfirmed(total);\r\n\r\n      setRecovered(recovered);\r\n      setDeaths(response.data.response[0].deaths.total);\r\n\r\n      setIsLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  if (isLoading === true) {\r\n    return (\r\n      <Loader type=\"BallTriangle\" color=\"cadetblue\" height={80} width={80} />\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"app__left\">\r\n          <div className=\"app__stats\">\r\n            <Card className=\"Cards\">\r\n              <p style={{ color: \"#ff073a\" }}>Confirmed</p>\r\n              <h3 style={{ color: \"red\" }}>{prettyPrintStat(NewCases)}</h3>\r\n\r\n              <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n                {prettyPrintStat(Confirmed)} Total\r\n              </Typography>\r\n            </Card>\r\n\r\n            <Card className=\"Cards\">\r\n              <p style={{ color: \"green\" }}>Recovered</p>\r\n              <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n                {prettyPrintStat(Recovered)}\r\n              </Typography>\r\n            </Card>\r\n            <Card className=\"Cards\">\r\n              <p style={{ color: \"#6c757d\" }}>Deceased</p>\r\n              <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n                {prettyPrintStat(Deaths)}\r\n              </Typography>\r\n            </Card>\r\n          </div>\r\n          <div className=\"map__div\">\r\n            <Map countries={mapCountries} center={mapCenter} zoom={mapZoom} />\r\n          </div>\r\n        </div>\r\n        <Card className=\"app__right\">\r\n          <CardContent>\r\n            <div className=\"app__information\">\r\n              <StateTable className=\"stateTablePosition\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nfunction heading() {\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: \"#6c757d\" }}>COVID-19</h1>\r\n      <h2 style={{ color: \"#4c75f2\", textDecoration: \"underline\" }}>India</h2>\r\n    </div>\r\n  );\r\n}\r\nexport default heading;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport Table from \"./tableData.js\";\nimport Heading from \"./heading.jsx\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Heading className=\"headingPosition\" />\n      <Table />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}